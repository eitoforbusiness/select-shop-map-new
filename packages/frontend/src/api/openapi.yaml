openapi: 3.0.0
info:
  title: セレクトショップマップ API
  version: 1.0.0
  description: セレクトショップマップのバックエンドAPI

servers:
  - url: http://localhost/api
    description: ローカル開発環境

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Shop:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          type: string
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        average_rating:
          type: number
          format: float
        brands:
          type: array
          items:
            type: string
        description:
          type: string

    ShopInput:
      type: object
      required:
        - name
        - address
      properties:
        name:
          type: string
        address:
          type: string
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        brands:
          type: array
          items:
            type: string
        description:
          type: string

    Review:
      type: object
      properties:
        id:
          type: integer
          format: int64
        shop_id:
          type: integer
          format: int64
        user_name:
          type: string
        rating:
          type: integer
          minimum: 1
          maximum: 5
        comment:
          type: string
        brands:
          type: array
          items:
            type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    LoginCredentials:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    RegisterCredentials:
      type: object
      required:
        - name
        - email
        - password
        - password_confirmation
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        password_confirmation:
          type: string

    AuthResponse:
      type: object
      properties:
        token:
          type: string
        user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            email:
              type: string
        expires_at:
          type: string
          format: date-time

paths:
  /shops:
    get:
      summary: 店舗一覧を取得
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'
        '401':
          description: 認証エラー
    post:
      summary: 新規店舗を登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopInput'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        '401':
          description: 認証エラー
        '422':
          description: バリデーションエラー

  /shops/{shopId}:
    parameters:
      - name: shopId
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: 店舗詳細の取得
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        '404':
          description: 店舗が見つかりません

  /shops/{shopId}/reviews:
    parameters:
      - name: shopId
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: 店舗のレビュー一覧を取得
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        '404':
          description: 店舗が見つかりません
    post:
      summary: 店舗にレビューを投稿
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - rating
                - comment
              properties:
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
                comment:
                  type: string
                brands:
                  type: array
                  items:
                    type: string
                description:
                  type: string
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '401':
          description: 認証エラー
        '404':
          description: 店舗が見つかりません
        '422':
          description: バリデーションエラー

  /auth/login:
    post:
      summary: ログイン
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCredentials'
      responses:
        '200':
          description: ログイン成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: 認証エラー
        '422':
          description: バリデーションエラー

  /auth/register:
    post:
      summary: アカウント作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterCredentials'
      responses:
        '200':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '409':
          description: メールアドレス重複エラー
        '422':
          description: バリデーションエラー

  /auth/logout:
    post:
      summary: ログアウト
      security:
        - bearerAuth: []
      responses:
        '200':
          description: ログアウト成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: 認証エラー

  /favorite-shops:
    get:
      summary: お気に入り店舗一覧を取得
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'
        '401':
          description: 認証エラー

  /favorite-shops/{shopId}:
    parameters:
      - name: shopId
        in: path
        required: true
        schema:
          type: integer
    post:
      summary: お気に入り店舗を追加
      security:
        - bearerAuth: []
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: 既にお気に入りに追加されています
        '401':
          description: 認証エラー
    delete:
      summary: お気に入り店舗を削除
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: 認証エラー
